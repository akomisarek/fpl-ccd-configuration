{
  "stats": {
    "suites": 1,
    "tests": 0,
    "passes": 0,
    "pending": 0,
    "failures": 0,
    "start": "2018-11-15T16:00:12.810Z",
    "end": "2018-11-15T16:00:18.541Z",
    "duration": 5731,
    "testsRegistered": 2,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 1,
    "hasOther": true,
    "skipped": 2,
    "hasSkipped": true,
    "passPercentClass": "danger",
    "pendingPercentClass": "danger"
  },
  "suites": {
    "uuid": "00c7ca8e-a68d-4237-8c25-7808c3e36e3c",
    "title": "",
    "fullFile": "",
    "file": "",
    "beforeHooks": [],
    "afterHooks": [],
    "tests": [],
    "suites": [
      {
        "uuid": "50bd115b-9ee0-491e-a4f2-850f4d6a484e",
        "title": "Enter attending hearing information into the application",
        "fullFile": "/Users/sivakumarsirigiri/Documents/MOJ_Projects/fpl-ccd-configuration/e2e/paths/attendingHearing_test.js",
        "file": "/e2e/paths/attendingHearing_test.js",
        "beforeHooks": [
          {
            "title": "\"before all\" hook: codeceptjs.beforeSuite",
            "fullTitle": "Enter attending hearing information into the application \"before all\" hook: codeceptjs.beforeSuite",
            "timedOut": false,
            "duration": 1,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "scenario.suiteSetup(suite)",
            "err": {},
            "isRoot": false,
            "uuid": "d81744a4-33a0-4e12-8269-ad84f291562e",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook: codeceptjs.before for \"completing half of the attending hearing section of the c110a application\"",
            "fullTitle": "Enter attending hearing information into the application \"before each\" hook: codeceptjs.before for \"completing half of the attending hearing section of the c110a application\"",
            "timedOut": false,
            "duration": 5713,
            "state": "failed",
            "pass": false,
            "fail": true,
            "pending": false,
            "code": "scenario.setup(suite)",
            "err": {
              "message": "Error: Can't connect to WebDriver.\nError: Sauce could not start your job. For more information on what happened, please visit https://saucelabs.com/jobs/c8e293cd423f4af9ab8219bcbaaa1658\n\nPlease make sure Selenium Server (ChromeDriver or PhantomJS) is running and accessible",
              "estack": "Can't connect to WebDriver.\nError: Sauce could not start your job. For more information on what happened, please visit https://saucelabs.com/jobs/c8e293cd423f4af9ab8219bcbaaa1658\n\nPlease make sure Selenium Server (ChromeDriver or PhantomJS) is running and accessible"
            },
            "isRoot": false,
            "uuid": "27fee504-82c8-4d70-9ae6-9d8cdbe1817b",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"before each\" hook: Before",
            "fullTitle": "Enter attending hearing information into the application \"before each\" hook: Before",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "recorder.errHandler((err) => {\n  recorder.session.start('teardown');\n  recorder.cleanAsyncErr();\n  event.emit(event.test.failed, suite, err);\n  if (hookName === 'after') event.emit(event.test.after, suite);\n  if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n  recorder.add(() => done(err));\n});\nif (isAsyncFunction(fn)) {\n  event.emit(event.hook.started, suite);\n  recorder.startUnlessRunning();\n  this.test.body = fn.toString();\n  fn.apply(this, getInjectedArguments(fn)).then(() => {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }).catch((e) => {\n    recorder.throw(e);\n    recorder.catch((e) => {\n      const err = (recorder.getAsyncErr() === null) ? e : recorder.getAsyncErr();\n      recorder.session.start('teardown');\n      recorder.cleanAsyncErr();\n      event.emit(event.test.failed, suite, err);\n      if (hookName === 'after') event.emit(event.test.after, suite);\n      if (hookName === 'afterSuite') event.emit(event.suite.after, suite);\n      recorder.add(() => done(err));\n    });\n  });\n  return;\n}\ntry {\n  event.emit(event.hook.started, suite);\n  recorder.startUnlessRunning();\n  this.test.body = fn.toString();\n  const res = fn.apply(this, getInjectedArguments(fn));\n  if (isGenerator(fn)) {\n    try {\n      res.next(); // running test\n    } catch (err) {\n      event.emit(event.test.failed, event.test, err);\n      done(err);\n    }\n    recorder.catch(); // catching possible errors in promises\n    resumeTest(res, () => {\n      recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n      recorder.add(`finish ${hookName} hook`, () => done());\n    });\n  }\n} catch (err) {\n  recorder.throw(err);\n} finally {\n  if (!isGenerator(fn)) {\n    recorder.add('fire hook.passed', () => event.emit(event.hook.passed, suite));\n    recorder.add(`finish ${hookName} hook`, () => done());\n    recorder.catch();\n  }\n}",
            "err": {},
            "isRoot": false,
            "uuid": "7d5983f8-d1dd-4780-b872-696b3530f43b",
            "isHook": true,
            "skipped": false
          }
        ],
        "afterHooks": [
          {
            "title": "\"after all\" hook: codeceptjs.afterSuite",
            "fullTitle": "Enter attending hearing information into the application \"after all\" hook: codeceptjs.afterSuite",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "scenario.suiteTeardown(suite)",
            "err": {},
            "isRoot": false,
            "uuid": "156c2844-9db3-44ee-82f6-f39f7a38c4a7",
            "isHook": true,
            "skipped": false
          },
          {
            "title": "\"after each\" hook: finalize codeceptjs",
            "fullTitle": "Enter attending hearing information into the application \"after each\" hook: finalize codeceptjs",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "scenario.teardown(suite)",
            "err": {},
            "isRoot": false,
            "uuid": "dc770135-86db-4faf-8e5d-a3a3199dc9c6",
            "isHook": true,
            "skipped": false
          }
        ],
        "tests": [
          {
            "title": "completing half of the attending hearing section of the c110a application",
            "fullTitle": "Enter attending hearing information into the application: completing half of the attending hearing section of the c110a application",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "attendingHearingPage.enterInterpreter();\nattendingHearingPage.enterIntermediary();\nattendingHearingPage.enterLitigationIssues();\nI.continueAndSubmit(config.eventSummary, config.eventDescription);\nI.seeEventSubmissionConfirmation(config.applicationActions.attendingHearing);\ncaseViewPage.selectTab(caseViewPage.tabs.legalOpinion);\nI.seeAnswerInTab(1, 'Attending the hearing', 'Any Interpreter required?', 'Yes');\nI.seeAnswerInTab(2, 'Attending the hearing', 'Give details', 'French' +\n  ' translator');\nI.seeAnswerInTab(3, 'Attending the hearing', 'Any intermediary required?', 'No');\nI.seeAnswerInTab(4, 'Attending the hearing', 'Litigation capacity issues', 'No');",
            "err": {},
            "isRoot": false,
            "uuid": "f55deb5a-750a-443a-8055-33e0b64fafea",
            "isHook": false,
            "skipped": true
          },
          {
            "title": "completing the attending hearing section of the c110a application",
            "fullTitle": "Enter attending hearing information into the application: completing the attending hearing section of the c110a application",
            "timedOut": false,
            "duration": 0,
            "pass": false,
            "fail": false,
            "pending": false,
            "code": "attendingHearingPage.enterInterpreter();\nattendingHearingPage.enterIntermediary();\nattendingHearingPage.enterLitigationIssues();\nattendingHearingPage.enterLearningDisability();\nattendingHearingPage.enterWelshProceedings();\nattendingHearingPage.enterExtraSecurityMeasures();\nI.continueAndSubmit(config.eventSummary, config.eventDescription);\nI.seeEventSubmissionConfirmation(config.applicationActions.attendingHearing);\ncaseViewPage.selectTab(caseViewPage.tabs.legalOpinion);\nI.seeAnswerInTab(1, 'Attending the hearing', 'Any Interpreter required?', 'Yes');\nI.seeAnswerInTab(2, 'Attending the hearing', 'Give details', 'French translator');\nI.seeAnswerInTab(3, 'Attending the hearing', 'Any intermediary required?', 'No');\nI.seeAnswerInTab(4, 'Attending the hearing', 'Litigation capacity issues', 'No');\nI.seeAnswerInTab(5, 'Attending the hearing', 'Learning disability issues', 'Yes');\nI.seeAnswerInTab(6, 'Attending the hearing', 'Give details', 'learning difficulty');\nI.seeAnswerInTab(7, 'Attending the hearing', 'Do you need Welsh proceedings', 'No');\nI.seeAnswerInTab(8, 'Attending the hearing', 'Any security needed?', 'Yes');\nI.seeAnswerInTab(9, 'Attending the hearing', 'Give details', 'Separate waiting rooms');",
            "err": {},
            "isRoot": false,
            "uuid": "f90d8084-b98f-4b09-a928-131e33b0decc",
            "isHook": false,
            "skipped": true
          }
        ],
        "suites": [],
        "passes": [],
        "failures": [],
        "pending": [],
        "skipped": [
          "f55deb5a-750a-443a-8055-33e0b64fafea",
          "f90d8084-b98f-4b09-a928-131e33b0decc"
        ],
        "duration": null,
        "root": false,
        "rootEmpty": false,
        "_timeout": 0
      }
    ],
    "passes": [],
    "failures": [],
    "pending": [],
    "skipped": [],
    "duration": 0,
    "root": true,
    "rootEmpty": true,
    "_timeout": 0
  },
  "copyrightYear": 2018
}